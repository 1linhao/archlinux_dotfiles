if true then return {} end
-- obsidian.nvim 配置 (适配 lazy.nvim)
return {
  "epwalsh/obsidian.nvim",
  version = "*", -- 使用最新发布版而不是最新提交
  lazy = true,
  event = { "BufReadPre " .. vim.fn.expand("/home/lh/Documents/share/obsidian") .. "/**.md" }, -- 按需加载
  dependencies = { "nvim-lua/plenary.nvim" },
  opts = {
    -- 工作区配置
    workspaces = {
      {
        name = "notes",  -- 工作区名称
        path = "/home/lh/Documents/share/obsidian",  -- Obsidian 库根目录（含 .obsidian 文件夹）
        overrides = {
          notes_subdir = ".",  -- 覆盖默认笔记子目录
        },
      },
    },

    -- 默认笔记子目录（可被工作区覆盖）
    notes_subdir = "notes",

    -- 日志级别（vim.log.levels.*）
    log_level = vim.log.levels.ERROR,

    -- 自动补全（基于 nvim-cmp）
    completion = {
      -- nvim_cmp = true,
      blink = true,  -- 启用补全
      min_chars = 4,    -- 触发补全的最小字符数
    },

    -- 自定义键位映射
    mappings = {
      ["gf"] = {  -- 改进的 gf 跳转（支持 Markdown/Wiki 链接）
        action = function() return require("obsidian").util.gf_passthrough() end,
        opts = { noremap = false, expr = true, buffer = true },
      },
      ["<leader>ch"] = {  -- 切换复选框状态
        action = function() return require("obsidian").util.toggle_checkbox() end,
        opts = { buffer = true },
      },
      ["<cr>"] = {  -- 智能操作（根据上下文跳转链接或切换复选框）
        action = function() return require("obsidian").util.smart_action() end,
        opts = { buffer = true, expr = true },
      },
    },

    -- 新笔记存放位置（"current_dir" 或 "notes_subdir"）
    new_notes_location = "current_dir",

    -- 自定义笔记 ID 生成规则
    note_id_func = function(title)
      local suffix = title and title:gsub(" ", "-"):gsub("[^A-Za-z0-9-]", ""):lower()
                    or string.char(math.random(65, 90)):rep(4)
      return os.time() .. "-" .. suffix  -- 例如：1657296016-my-note
    end,

    -- 自定义笔记文件名
    note_path_func = function(spec)
      return spec.dir / spec.id .. ".md"  -- 默认格式：ID.md
    end,

    -- Wiki 链接格式（可选："use_alias_only", "prepend_note_id", 等）
    wiki_link_func = "use_alias_only",
    preferred_link_style = "wiki",  -- 默认链接风格（wiki/markdown）
    follow_url_func = function (url)
      vim.ui.open(url)
    end,
    follow_img_func = function(img)
      vim.fn.jobstart({"xdg-open", img})
    end,
    -- 高级功能
    disable_frontmatter = false,  -- 是否禁用自动管理 Frontmatter
    use_advanced_uri = false,     -- 是否使用 Obsidian Advanced URI 插件
    open_app_foreground = false,  -- 打开 Obsidian 时是否强制前台

    -- 图片粘贴配置
    -- 自定义图片名前缀：当前笔记文件名（不带后缀） + 时间戳
    image_name_func = function()
      local client = require("obsidian").get_client()
      local current_note_path = client:get_current_note_path()
      if current_note_path then
        -- 提取文件名（不带后缀）
        local filename = vim.fn.fnamemodify(current_note_path, ":t:r")
        -- 生成图片名格式：笔记文件名_时间戳
        return string.format("%s_%s-", filename, os.time())
      else
        -- 回退：仅时间戳
        return string.format("%s-", os.time())
      end
    end,

    attachments = {
      -- 动态设置图片保存路径为当前笔记目录下的 attachments 子目录
      img_folder = function(client)
        local current_note_path = client:get_current_note_path()
        if current_note_path then
          local note_dir = require("obsidian").util.dirname(current_note_path)
          local target_dir = note_dir .. "/attachments"
          vim.fn.mkdir(target_dir, "p")
          return target_dir
        else
          return client:vault_root() .. "/assets/imgs" -- 回退路径
        end
      end,

      -- 自定义插入的 Markdown 图片链接文本
      img_text_func = function(client, path)
        local rel_path = client:vault_relative_path(path) or path
        local filename = rel_path.name
        return string.format("![%s](%s)", filename, rel_path)
      end,
    },

    -- 界面增强
    ui = {
      enable = true,  -- 启用 UI 增强（如复选框高亮）
      update_debounce = 200,
      max_file_length = 50000,
      checkboxes = {  -- 自定义复选框图标
        [" "] = { char = "󰄱", hl_group = "ObsidianTodo" },
        ["x"] = { char = "", hl_group = "ObsidianDone" },
      },
    },

    -- 其他配置
    picker = { name = "telescope.nvim" },  -- 选择器插件（默认 Telescope）
    sort_by = "modified", sort_reversed = true,  -- 按修改时间倒序排序
  },
  config = function(_, opts)
    vim.opt.conceallevel = 1
    require("obsidian").setup(opts)
    -- 可选：为 Markdown 文件设置自动命令或额外键位
  end,
}
